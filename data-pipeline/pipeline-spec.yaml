georgian-budget-pipeline:
  title: Georgian Budget Data Pipeline
  description: Loads a single Georgian budget Excel file and saves as normalized JSON
  pipeline:
    # Step 1: Load the Excel file with specific structure
    - run: load
      parameters:
        from: "https://geostat.ge/media/72030/saxelmwifo-biujeti-funqcionalur-chrilshi.xlsx"
        name: "georgian_budget"
        format: "xlsx"
        skip_rows: [1, 2] # Skip first 2 rows (title information)
        headers: 1 
        limit_rows: 10    # Only take rows 4-13 (actual data)
        encoding: "utf-8"
    
    # Step 2: Unpivot years from columns to rows
    - run: unpivot
      parameters:
        resources: georgian_budget
        extraKeyFields:

          -
            name: year
            type: any
            
        extraValueField:
            name: budget
            type: any
        unpivot:
          -
            name: ([0-9]{4})
            keys:
              year: \1
    
    - run: find_replace
      parameters:
        resources: georgian_budget
        fields:
          -
            name: budget
            patterns:
              -
                find: X
                replace: ""
    
    - run: add_computed_field
      parameters:
        resources: georgian_budget
        fields:
          -
            operation: format
            target: name
            with: '{დ  ა ს ა ხ ე ლ ე ბ ა}'
    
    - run: delete_fields
      parameters:
        resources: georgian_budget
        fields:
          - "დ  ა ს ა ხ ე ლ ე ბ ა"
    
    - run: set_types
      parameters:
         resources: georgian_budget
         types:
           "year":
              type: number
           "budget":
              type: number
           "name":
              type: any
    
    # Step 3: Save as files
    - run: dump_to_path
      parameters:
        out-path: "../data/processed"
        format: "json"
        pretty-descriptor: true
        encoding: "utf-8"

    - run: dump_to_path
      parameters:
        out-path: "../data/processed"
        format: "csv"
        pretty-descriptor: true
        encoding: "utf-8"
        